facet_wrap(~ model)
plot2<-ggplot(estimateslist[c(7:12),], mapping = aes(world, tauestimates))+
geom_boxplot()+
facet_wrap(~ model)
#compare in plots
ggarrange(plot1, plot2,
labels = c("Full", "Restricted"),
ncol = 1, nrow = 2)
#If women are purposefully under-report their
income <- c(runif(230,0,2),
runif(70,18,20), rnorm(140,11,10), rnorm(150,15,5), rnorm(280,27,10),rnorm(130,39,10))
#non-negative values for income
income <- ifelse(income<0,0,income)
#  Plot your income variable in a histogram with 30 bins.
hist(income,freq=FALSE,col="white",xlab="income",main="Simulated Histogram of income")
income2 <- c(runif(230,0,2),
runif(70,20,22), rnorm(140,11,10), rnorm(150,15,5), rnorm(280,27,10),rnorm(130,39,10))
#non-negative values for income
income <- ifelse(income<0,0,income)
#  Plot your income variable in a histogram with 30 bins.
hist2<-hist(income,freq=FALSE,col="white",xlab="income",main="Simulated Histogram of income")
plot(hist1, col = "red") # Plot 1st histogram using a transparent color
plot(hist2, col = "lightblue", add = TRUE)
income2 <- c(runif(230,0,2),
runif(70,20,22), rnorm(140,11,10), rnorm(150,15,5), rnorm(280,27,10),rnorm(130,39,10))
#non-negative values for income
income2 <- ifelse(income2<0,0,income2)
#  Plot your income variable in a histogram with 30 bins.
hist2<-hist(income2,freq=FALSE,col="white",xlab="income",main="Simulated Histogram of income")
plot(hist1, col = "red") # Plot 1st histogram using a transparent color
plot(hist2, col = "lightblue", add = TRUE)
#If women are purposefully under-report their
income2 <- c(runif(230,0,2),
runif(70,20,22), rnorm(140,11,10), rnorm(150,15,5), rnorm(280,27,10),rnorm(130,39,10))
#non-negative values for income
income2 <- ifelse(income2<0,0,income2)
#  Plot your income variable in a histogram with 30 bins.
hist2<-hist(income2,col="white",xlab="income",main="Simulated Histogram of income")
plot(hist1, col = "red") # Plot 1st histogram using a transparent color
plot(hist2, col = "lightblue", add = TRUE)
#If women are purposefully under-report their
income2 <- c(runif(230,0,2),
runif(70,20,22), rnorm(140,11,10), rnorm(150,15,5), rnorm(280,27,10),rnorm(130,39,10))
#non-negative values for income
income2 <- ifelse(income2<0,0,income2)
#  Plot your income variable in a histogram with 30 bins.
hist2<-hist(income2,breaks=33,freq=FALSE,col="white",xlab="income",main="Simulated Histogram of income")
plot(hist1, col = "red") # Plot 1st histogram using a transparent color
plot(hist2, col = "lightblue", add = TRUE)
#If women are purposefully under-report their income around the threshold
#which explains the second peak around 18-20 k
#then that peak should have random dist
incomereported <- c(runif(230,0,2),
rnorm(70,19,10), rnorm(140,11,10), rnorm(150,15,5), rnorm(280,27,10),rnorm(130,39,10))
#non-negative values for income
incomereported <- ifelse(incomereported<0,0,incomereported)
#  Plot your income variable in a histogram with 30 bins.
hist2<-hist(incomereported,breaks=33,freq=FALSE,col="white",xlab="income",main="Simulated Histogram of income")
#plot(hist1, col = "red") # Plot 1st histogram using a transparent color
#plot(hist2, col = "lightblue", add = TRUE)
hist2<-hist(incomereported,col="white",xlab="income",main="Simulated Histogram of income")
#If women are purposefully under-report their income around the threshold
#which explains the second peak around 18-20 k
#then that peak should have random dist
incomereported <- c(runif(230,0,2),
rnorm(70,19,10), rnorm(140,11,10), rnorm(150,15,5), rnorm(280,27,10),rnorm(130,39,10))
#non-negative values for income
incomereported <- ifelse(incomereported<0,0,incomereported)
#  Plot your income variable in a histogram with 30 bins.
hist2<-hist(incomereported,breaks=33,freq=FALSE,col="white",xlab="income",main="Simulated Histogram of income")
#plot(hist1, col = "red") # Plot 1st histogram using a transparent color
#plot(hist2, col = "lightblue", add = TRUE)
plot(hist1) # Plot 1st histogram using a transparent color
knitr::opts_chunk$set(echo = TRUE)
#r packages
library(tidyverse)
library(ggpubr)
#library(scales)
#library(AER)
set.seed(89757)
# bimodal - 0.14*1000=140;0.06*1000=60
#rnorm:mean:11,17,25,27,39
#density*1000/0.4 for n
#a few adjustment:
income <- c(runif(230,0,2),
runif(70,18,20), rnorm(140,11,10), rnorm(150,15,5), rnorm(280,27,10),rnorm(130,39,10))
#non-negative values for income
income <- ifelse(income<0,0,income)
#  Plot your income variable in a histogram with 30 bins.
hist1<-hist(income,breaks =30,freq=FALSE,col="white",xlab="income",main="Simulated Histogram of income")
hist1
# This program is only available for women in households with income below $20,000 at the time they gave birth
eligible <- ifelse(income<20,1,0)
#fullA
fullA<-data.frame(income,eligible)
#check income range
range(income)
#assuming linear relationship, and since the expected treatment effect is 4
#with sd=1
#the max y0 is better set under 24, I thus set beta_1=0.3; beta_0=3 to minimize the possibility of negative health measure
fullA$Y0<-3+0.3*income+rnorm(1000,0,1)
#check Y0 range
range(fullA$Y0)
#Y1
fullA$Y1<-fullA$Y0+rnorm(1000,4,1)+rnorm(1000,0,1)
#check Y0 range
range(fullA$Y1)
#check expected treatment effect
mean(fullA$Y1-fullA$Y0)
#obsA
obsA<-fullA
obsA$Y<-ifelse(eligible==1,fullA$Y1,fullA$Y0)
obsA<-obsA[,-c(3,4)]
#fullB
#threshold- restructure
threshold<-income-20
#check threshold
range(threshold)
#quadratic model for E[Y(1) | X], potential score between 0 and 100, sd=1, treatment effect=4
#Y0 better be larger than 4
Y0 <-10+0.05*threshold + rnorm(1000,0,1)
range(Y0)
fullB<-data.frame(income,threshold,Y0)
#Y1 below threshold, expected treatment=4, over threshold, quadratic
#CHECK FUNCTION
fullB$Y1<- ifelse(fullB$threshold<0,fullB$Y0+rnorm(1000,4,1)+rnorm(1000,0,1),0.5*fullB$Y0^2+ rnorm(1000,0,1))
#check range
range(fullB$Y1)
#obsB
obsB<-fullB
obsB$Y<-ifelse(eligible==1,obsB$Y1,obsB$Y0)
obsB<-obsB[,-c(3,4)]
range(obsB$Y)
#obsA
ggplot(data = obsA)+
geom_point(aes(x=income,y=Y,color=as.factor(eligible))) + scale_color_manual(values=c("blue","red"))
#obsB
ggplot(data = obsB)+
geom_point(aes(x=income,y=Y,color=as.factor(eligible))) + scale_color_manual(values=c("blue","red"))
#Fit a linear model
lm5a1<-lm(Y~income+eligible,obsA)
#Estimate the treatment effect
#predict
pred5a1<-predict(lm5a1,data.frame(income=c(20,20),eligible=c(0,1)))
#treatment effect
tau5a1<-pred5a1[2]-pred5a1[1]
tau5a1
#Fit a linear model and include an interaction between income and eligible.
lm5a2<-lm(Y~income*eligible,obsA)
#Estimate the treatment effect
#predict
pred5a2<-predict(lm5a2,data.frame(income=c(20,20),eligible=c(0,1)))
#treatment effect
tau5a2<-pred5a2[2]-pred5a2[1]
tau5a2
#Fit a model that is quadratic in income and includes an interaction between both income terms and eligible
lm5a3<-lm(Y~I(income^2)*income*eligible,obsA)
#Estimate the treatment effect
#predict
#CHECK FUNCTION
pred5a3<-predict(lm5a3,data.frame(income=c(20,20),eligible=c(0,1)))
#treatment effect
tau5a3<-pred5a3[2]-pred5a3[1]
tau5a3
#Fit a linear model
lm5b1<-lm(Y~income+eligible,obsB)
#Estimate the treatment effect
#predict
pred5b1<-predict(lm5b1,data.frame(income=c(20,20),eligible=c(0,1)))
#treatment effect
tau5b1<-pred5b1[2]-pred5b1[1]
tau5b1
#Fit a linear model and include an interaction between income and eligible.
lm5b2<-lm(Y~income*eligible,obsB)
#Estimate the treatment effect
#predict
pred5b2<-predict(lm5b2,data.frame(income=c(20,20),eligible=c(0,1)))
#treatment effect
tau5b2<-pred5b2[2]-pred5b2[1]
tau5b2
#Fit a model that is quadratic in income and includes an interaction between both income terms and eligible
lm5b3<-lm(Y~I(income^2)*income*eligible,obsB)
#Estimate the treatment effect
#predict
#CHECK FUNCTION
pred5b3<-predict(lm5b3,data.frame(income=c(20,20),eligible=c(0,1)))
#treatment effect
tau5b3<-pred5b3[2]-pred5b3[1]
tau5b3
#Fit a linear model
lm6a1<-lm(Y~income+eligible,obsA,subset = (income >=18 & income <= 22))
#Estimate the treatment effect
#predict
pred6a1<-predict(lm6a1,data.frame(income=c(20,20),eligible=c(0,1)))
#treatment effect
tau6a1<-pred6a1[2]-pred6a1[1]
tau6a1
#Fit a linear model and include an interaction between income and eligible.
lm6a2<-lm(Y~income*eligible,obsA,subset = (income >=18 & income <= 22))
#Estimate the treatment effect
#predict
pred6a2<-predict(lm6a2,data.frame(income=c(20,20),eligible=c(0,1)))
#treatment effect
tau6a2<-pred6a2[2]-pred6a2[1]
tau6a2
#Fit a model that is quadratic in income and includes an interaction between both income terms and eligible
lm6a3<-lm(Y~I(income^2)*income*eligible,obsA,subset = (income >=18 & income <= 22))
#Estimate the treatment effect
#predict
#CHECK FUNCTION
pred6a3<-predict(lm6a3,data.frame(income=c(20,20),eligible=c(0,1)))
#treatment effect
tau6a3<-pred6a3[2]-pred6a3[1]
tau6a3
#Fit a linear model
lm6b1<-lm(Y~income+eligible,obsB,subset = (income >=18 & income <= 22))
#Estimate the treatment effect
#predict
pred6b1<-predict(lm6b1,data.frame(income=c(20,20),eligible=c(0,1)))
#treatment effect
tau6b1<-pred6b1[2]-pred6b1[1]
tau6b1
#Fit a linear model and include an interaction between income and eligible.
lm6b2<-lm(Y~income*eligible,obsB,subset = (income >=18 & income <= 22))
#Estimate the treatment effect
#predict
pred6b2<-predict(lm6b2,data.frame(income=c(20,20),eligible=c(0,1)))
#treatment effect
tau6b2<-pred6b2[2]-pred6b2[1]
tau6b2
#Fit a model that is quadratic in income and includes an interaction between both income terms and eligible
lm6b3<-lm(Y~I(income^2)*income*eligible,obsB,subset = (income >=18 & income <= 22))
#Estimate the treatment effect
#predict
#CHECK FUNCTION
pred6b3<-predict(lm6b3,data.frame(income=c(20,20),eligible=c(0,1)))
#treatment effect
tau6b3<-pred6b3[2]-pred6b3[1]
tau6b3
estimateslist<-data.frame(
world=c(rep(c(rep("A",3),rep("B",3)),2)),
model=c(rep(c("modeli","modelii","modeliii"),4)),
dataset=c(rep(c("All the data"),6),rep(c("Restricted data"),6)),
tauestimates=c(tau5a1,tau5a2,tau5a3,tau5b1,tau5b2,tau5b3,tau6a1,tau6a2,tau6a3,tau6b1,tau6b2,tau6b3)
)
#figure
plot1<-ggplot(estimateslist[c(1:6),], mapping = aes(world, tauestimates))+
geom_boxplot()+
facet_wrap(~ model)
plot2<-ggplot(estimateslist[c(7:12),], mapping = aes(world, tauestimates))+
geom_boxplot()+
facet_wrap(~ model)
#compare in plots
ggarrange(plot1, plot2,
labels = c("Full", "Restricted"),
ncol = 1, nrow = 2)
plot(hist1) # Plot 1st histogram using a transparent color
plot(hist1) # Plot 1st histogram using a transparent color
plot(hist2, col = "lightblue", add = TRUE)
mycol <- rgb(0, 0, 255, max = 255, alpha = 125, names = "blue50")
plot(hist1) # Plot 1st histogram using a transparent color
plot(hist2, col = "mycol", add = TRUE)
plot(hist1) # Plot 1st histogram using a transparent color
plot(hist2, col = "blue50", add = TRUE)
rgb(0, 0, 255, max = 255, alpha = 125, names = "blue50")
plot(hist1) # Plot 1st histogram using a transparent color
plot(hist2, col = "blue50", add = TRUE)
plot(hist2, col = "mycol", add = TRUE)
mycol <- rgb(0, 0, 255, max = 255, alpha = 125, names = "blue50")
mycol
plot(hist1) # Plot 1st histogram using a transparent color
plot(hist2, col = "#0000FF7D", add = TRUE)
mycol <- rgb(0, 11, 255, max = 255, alpha = 125, names = "blue50")
mycol
plot(hist1, col = "000BFF7D") # Plot 1st histogram using a transparent color
plot(hist1, col = "#000BFF7D") # Plot 1st histogram using a transparent color
plot(hist2, col = "#0000FF7D", add = TRUE)
mycol <- rgb(0, 225, 0, max = 255, alpha = 125, names = "blue50")
mycol
plot(hist1, col = "#00E1007D") # Plot 1st histogram using a transparent color
plot(hist2, col = "#0000FF7D", add = TRUE)
mycol <- rgb(30, 225, 30, max = 255, alpha = 125, names = "blue50")
mycol
plot(hist1, col = "#1EE11E7D") # Plot 1st histogram using a transparent color
plot(hist2, col = "#0000FF7D", add = TRUE)
mycol <- rgb(225, 0, 0, max = 255, alpha = 125, names = "blue50")
mycol
plot(hist1, col = "#E100007D") # Plot 1st histogram using a transparent color
plot(hist2, col = "#0000FF7D", add = TRUE)
x<-rnorm(100,5,1)
x
x2<-runif(100,20,30)
y<-x1+x2
x1<-rnorm(100,5,1)
x2<-runif(100,20,30)
y<-x1+x2
y<-x1+x2+rnorm(100)
summary(lm(y~x1))
summary(lm(y~x2))
x1<-rnorm(100,5,1)
x2<-runif(100,20,30)
y<-3*x1+x2+rnorm(100)
summary(lm(y~x2))
x1<-rnorm(100,5,1)
x2<-runif(100,20,30)
y<-3*x1+x2+rnorm(100)
summary(lm(y~x1))
x1<-rnorm(100,5,1)
x2<-runif(100,20,30)
y<-3*x1+x2+rnorm(100)
summary(lm(y~x1))
x1<-rnorm(100,5,1)
x2<-runif(100,20,30)
y<-3*x1+x2+rnorm(100)
summary(lm(y~x1))
x1<-rnorm(100,5,1)
x2<-runif(100,20,30)
y<-3*x1+x2+rnorm(100)
summary(lm(y~x1))
x1<-rnorm(100,5,1)
x2<-runif(100,20,30)
y<-3*x1+x2+rnorm(100)
summary(lm(y~x1))
x1<-rnorm(100,5,1)
x2<-runif(100,20,30)
y<-3*x1+x2+rnorm(100)
summary(lm(y~x1))
x1<-rnorm(100,5,1)
x2<-runif(100,20,30)
y<-3*x1+x2+rnorm(100)
summary(lm(y~x1))
x1<-rnorm(100,5,1)
x2<-runif(100,20,30)
y<-3*x1+x2+rnorm(100)
summary(lm(y~x1))
x1<-rnorm(100,5,1)
x2<-runif(100,20,30)
y<-3*x1+x2+rnorm(100)
summary(lm(y~x1))
x1<-rnorm(100,5,1)
x2<-runif(100,20,30)
y<-3*x1+x2+rnorm(100)
summary(lm(y~x1))
x1<-rnorm(100,5,1)
x2<-runif(100,20,30)
y<-3*x1+x2+rnorm(100)
summary(lm(y~x1))
x1<-rnorm(100,5,1)
x2<-runif(100,20,30)
y<-3*x1+x2+rnorm(100)
summary(lm(y~x1))
x1<-rnorm(100,5,1)
x2<-runif(100,20,30)
y<-3*x1+x2+rnorm(100)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-3*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-3*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-3*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-3*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-3*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-2*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-2*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-2*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-2*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-2*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-2*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-2*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-2*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-2*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-2*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-5+2*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-5+2*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-5+2*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-5+2*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-5+2*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-5+2*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-5+2*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-5+2*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-5+2*x1+x2+rnorm(1000)
summary(lm(y~x1))
x1<-rnorm(1000,5,1)
x2<-runif(1000,20,30)
y<-5+2*x1+x2+rnorm(1000)
summary(lm(y~x1))
knitr::opts_chunk$set(echo = TRUE)
#r packages
library(tidyverse)
library(ggpubr)
library(rdrobust)
set.seed(89757)
rdplot(y=obsB$Y,x=obsB$income,c=20,p=1)
rdplot(y=obsB$Y,x=obsB$income,c=20,p=2)
obsB$income
y=obsB$Y,
obsB$Y
obsB$Y
rdplot(y=obsB$Y,x=obsB$income,p=1)
rdplot(y=obsB$Y,x=obsB$income,c=20,p=1)
rdplot(y=obsB$Y,x=obsB$income,c=20,p=2)
?rdplot
summary(rdrobust(y=obsB$Y,x=obsB$income,c=20,p=1,bwselect="msetwo"))
#fit a linear
ddrd1<-rdrobust(y=obsB$Y,x=obsB$income,c=20,p=1,bwselect="msetwo")
#fit a quadratic
ddrd2<-rdrobust(y=obsB$y,x=obsB$income,c=20,p=2,bwselect="msetwo")
#fit a linear
ddrd1<-rdrobust(y=obsB$Y,x=obsB$income,c=20,p=1,bwselect="msetwo")
#fit a quadratic
ddrd2<-rdrobust(y=obsB$Y,x=obsB$income,c=20,p=2,bwselect="msetwo")
summary(ddrd1)
summary(ddrd2)
#fit a linear
ddrd1<-rdrobust(y=obsB$Y,x=obsB$income,c=20,p=1,bwselect="msetwo")
#fit a quadratic
ddrd2<-rdrobust(y=obsB$Y,x=obsB$income,c=20,p=2,bwselect="msetwo")
# Compare the point estimates and bandwidths across these approaches
summary(ddrd1)
summary(ddrd2)
#msetwo two different MSE-optimal bandwidth selectors (below and above the cutoff) for the RD treatment effect estimator.
#Therefore I try to run and compare with cer-optimal  bandwidth selection metho
#certwo two different CER-optimal bandwidth selectors (below and above the cutoff) for the RD treatment effect estimator.
#fit a linear
ddrd3<-rdrobust(y=obsB$Y,x=obsB$income,c=20,p=1,bwselect="certwo")
#fit a quadratic
ddrd4<-rdrobust(y=obsB$Y,x=obsB$income,c=20,p=2,bwselect="certwo")
# Compare the point estimates and bandwidths across these approaches
summary(ddrd1)
summary(ddrd2)
summary(ddrd3)
summary(ddrd4)
summary(ddrd1)
summary(ddrd3)
summary(ddrd1)
summary(ddrd3)
summary(ddrd2)
summary(ddrd4)
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
